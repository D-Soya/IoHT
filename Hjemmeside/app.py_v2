from flask import Flask, render_template, jsonify
import paho.mqtt.client as mqtt

app = Flask(__name__, template_folder='templates', static_folder='static')
data_from_mqtt = {'distance': None, 'temperature': None, 'humidity': None}

mqtt_server = "192.168.50.115"
mqtt_port = 1883
mqtt_user = "ioht"
mqtt_password = "kasper3600"
ultrasonic_topic = "ultrasonic"
dht_topic = "dht"

def on_connect(client, userdata, flags, rc):
    print(f"Connected with result code {rc}")
    client.subscribe(ultrasonic_topic)
    client.subscribe(dht_topic)

def on_message(client, userdata, msg):
    global data_from_mqtt
    payload = msg.payload.decode()

    if msg.topic == ultrasonic_topic:
        data_from_mqtt['distance'] = float(payload)
    elif msg.topic == dht_topic:
        # Check if payload contains both temperature and humidity information
        temperature_parts = payload.split('Temperature:')
        humidity_parts = payload.split('Humidity:')
        
        if len(temperature_parts) > 1 and len(humidity_parts) > 1:
            try:
                temperature = float(temperature_parts[1].split(',')[0])
                humidity = float(humidity_parts[1])
                
                # Update the data dictionary
                data_from_mqtt['temperature'] = temperature
                data_from_mqtt['humidity'] = humidity
            except ValueError as e:
                print(f"Error converting values: {e}")

    #print(f"Received message on topic {msg.topic}: {payload}")





client = mqtt.Client()
client.username_pw_set(mqtt_user, mqtt_password)
client.on_connect = on_connect
client.on_message = on_message

client.connect(mqtt_server, mqtt_port, 60)
client.loop_start()

@app.route('/')
def index():
    return render_template('index.html', dataFromMQTT=data_from_mqtt)

@app.route('/get_data')
def get_data():
    global data_from_mqtt
    return jsonify(data_from_mqtt)

if __name__ == '__main__':
    app.run(debug=True, host='127.0.0.1', port=5000)
